* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.screenContainer {
  position: absolute;
  left: -10000px;
}

input,
button {
  font: inherit;
}

html {
  font-family: "Comic Sans MS", cursive;
}

body {
  min-height: 100vh;
  background-color: #0c0e13; /* Dark background */
  color: #ffffff; /* White text color */
  padding: 1rem;
  display: flex;
  flex-direction: column;
}

main {
  flex-grow: 1;
  margin: auto;
  width: 100%;
  max-width: 800px;
  display: flex;
  flex-flow: column nowrap;
}

section {
  border: 1px solid #272d35; /* Darker border color */
  border-radius: 10px;
  padding: 0.5rem;
  background-color: #11161c; /* Slightly lighter background */
}

.button {
  border-radius: 10px;
  min-width: 48px;
  min-height: 48px;
}

.button:hover {
  cursor: pointer;
}

.newItemInput {
  position: sticky;
  top: 0;
  margin-bottom: 1rem;
}

.newItemInput__form {
  display: flex;
  gap: 0.25rem;
  font-size: 1.2rem; /* Slightly smaller font */
}

.newItemInput__input {
  width: calc(100% - (0.25rem + 48px));
  flex-grow: 1;
  border: 2px solid #272d35; /* Darker border color */
  border-radius: 10px;
  padding: 0.5em;
  color: #ffffff; /* White text color */
  background-color: #1b1f25; /* Slightly lighter background */
}

.newItemInput__button {
  background-color: transparent;
  color: #ffffff; /* White text color */
  border: 3px dashed #272d35; /* Darker dashed border */
  padding: 0.75em;
}

.newItemInput__button:hover,
.newItemInput__button:focus {
  color: #56b7eb; /* Blue color on hover/focus */
}

.listContainer {
  font-size: 1.2rem; /* Slightly smaller font */
  flex-grow: 1;
  display: flex;
  flex-flow: column;
  gap: 1rem;
}

.listTitle {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}

.listTitle__button {
  background-color: transparent;
  color: #ffffff; /* White text color */
  padding: 0.25em;
}

.listItems {
  flex-grow: 1;
  display: flex;
  flex-flow: column nowrap;
  list-style-type: none;
}

.item {
  display: flex;
  align-items: center;
  padding-top: 1em;
  gap: 1em;
}

.item > input[type="checkbox"] {
  text-align: center;
  min-width: 2.5rem;
  min-height: 2.5rem;
  cursor: pointer;
}

.item > input[type="checkbox"]:checked + label {
  text-decoration: line-through;
}

.item > label {
  flex-grow: 1;
  word-break: break-all;
}

.item > button:hover,
.item > button:focus {
  color: red;
}

@media (min-width: 768px) {
  section {
    padding: 1rem;
  }
  .newItemInput__form {
    gap: 0.5rem;
  }
}
